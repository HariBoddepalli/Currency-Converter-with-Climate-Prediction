import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.net.*;
import java.io.*;
import org.json.*;

public class CurrencyConverterGUI extends JFrame {
    private JTextField baseCurrencyField, amountField, convertedCurrencyField;
    private JButton convertButton;

    public CurrencyConverterGUI() {
        setTitle("Currency Converter");
        setSize(650, 450);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        getContentPane().setBackground(Color.LIGHT_GRAY);

        JPanel panel = new JPanel(new GridLayout(4, 2));
        panel.setBackground(Color.LIGHT_GRAY);

        JLabel baseCurrencyLabel = new JLabel("Base Currency:");
        baseCurrencyLabel.setFont(new Font("Arial", Font.BOLD, 25));
        baseCurrencyField = new JTextField();
        baseCurrencyField.setBackground(Color.WHITE);
        panel.add(baseCurrencyLabel);
        panel.add(baseCurrencyField);

        JLabel convertedCurrencyLabel = new JLabel("Converted Currency:");
        convertedCurrencyLabel.setFont(new Font("Arial", Font.BOLD, 25));
        convertedCurrencyField = new JTextField();
        convertedCurrencyField.setBackground(Color.WHITE);
        panel.add(convertedCurrencyLabel);
        panel.add(convertedCurrencyField);

        JLabel amountLabel = new JLabel("Amount:");
        amountLabel.setFont(new Font("Arial", Font.BOLD, 25));
        amountField = new JTextField();
        amountField.setBackground(Color.WHITE);
        panel.add(amountLabel);
        panel.add(amountField);

        convertButton = new JButton("Convert");
        convertButton.setBackground(Color.BLUE);
        convertButton.setForeground(Color.WHITE);
        convertButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                convertCurrency();
            }
        });
        panel.add(convertButton);

        JButton weatherAppButton = new JButton("Open Weather App");
        weatherAppButton.setBackground(Color.GREEN);
        weatherAppButton.setForeground(Color.BLUE);
        weatherAppButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
                WeatherApp.main(new String[0]);
            }
        });
        panel.add(weatherAppButton);

        add(panel);
        setVisible(true);
    }

    private void convertCurrency() {
        String baseCurrency = baseCurrencyField.getText().toUpperCase();
        String convertedCurrency = convertedCurrencyField.getText().toUpperCase();
        double amount;
        try {
            amount = Double.parseDouble(amountField.getText());
        } catch (NumberFormatException e) {
            amountField.setText("Invalid amount");
            return;
        }

        try {
            URL url = new URL("https://api.freecurrencyapi.com/v1/latest?apikey=fca_live_nDL0HFAAV47hLp6YlPEktIwIeQ89iALKkZgZKtUA&base_currency=" + baseCurrency);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            int responseCode = connection.getResponseCode();

            if (responseCode == HttpURLConnection.HTTP_OK) {
                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                StringBuilder response = new StringBuilder();
                String line;
                while ((line = reader.readLine()) != null) {
                    response.append(line);
                }
                reader.close();

                JSONObject jsonResponse = new JSONObject(response.toString());
                JSONObject data = jsonResponse.getJSONObject("data");
                double conversionRate = data.getDouble(convertedCurrency);
                double convertedAmount = amount * conversionRate;
                amountField.setText(String.format("%.2f", convertedAmount));
            } else {
                amountField.setText("Error: " + responseCode);
            }
        } catch (IOException | JSONException e) {
            e.printStackTrace();
            convertedCurrencyField.setText("Error");
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                new CurrencyConverterGUI();
            }
        });
    }
}
